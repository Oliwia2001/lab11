name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Instalacja Poetry
  install-poetry:
    runs-on: ubuntu-latest
    concurrency:
      group: install-group
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

  # Instalacja zależności projektowych
  install-dependencies:
    runs-on: ubuntu-latest
    concurrency:
      group: install-group
      cancel-in-progress: true
    needs: install-poetry
    steps:
      - uses: actions/checkout@v4
      - name: Cache poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-cache
          restore-keys: |
            ${{ runner.os }}-poetry-cache
      - name: Install dependencies using poetry
        run: |
          poetry install --no-interaction

  # Testy statyczne: linter, formatter, security
  static-tests:
    runs-on: ubuntu-latest
    concurrency:
      group: static-tests-group
      cancel-in-progress: true
    needs: install-dependencies
    strategy:
      matrix:
        test: [linter, formatter, security]
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies using poetry
        run: |
          poetry install --no-interaction
      - name: Run linter
        if: matrix.test == 'linter'
        run: |
          poetry run flake8 .
      - name: Run formatter
        if: matrix.test == 'formatter'
        run: |
          poetry run black --check .
      - name: Run security checks
        if: matrix.test == 'security'
        run: |
          poetry run bandit -r .

  # Testy jednostkowe
  unit-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    concurrency:
      group: unit-tests-group
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies using poetry
        run: |
          poetry install --no-interaction
      - name: Run unit tests
        run: |
          poetry run pytest --maxfail=1 --disable-warnings -q

 
