name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  setup_dependencies:
    runs-on: ubuntu-latest
    concurrency:
      group: setup-dependencies-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Cache poetry venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/example-app/example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH=$PATH:$HOME/.local/bin
      - name: Install project dependencies
        run: |
          cd example-app/
          poetry install --no-root

  linting_formatting_security:
    runs-on: ubuntu-latest
    concurrency:
      group: linting-formatting-security-${{ github.ref }}
      cancel-in-progress: true
    needs: setup_dependencies
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Formatter
        run: |
          poetry run task formatter
      - name: Security check
        run: |
          poetry run task security

  unit_tests:
    runs-on: ubuntu-latest
    concurrency:
      group: unit-tests-${{ github.ref }}
      cancel-in-progress: true
    needs: setup_dependencies
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install Poetry and project dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH=$PATH:$HOME/.local/bin
          cd example-app/
          poetry install --no-root
      - name: Run unit tests
        run: |
          poetry run task test
